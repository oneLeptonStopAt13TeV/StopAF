#!/bin/python
from __future__ import print_function
import math
#from printf import printf


regions = ["2j_250    ","2j_350    ","3j_250   ","3j_350    ","4j_low_250","4j_low_325","4j_high_250","4j_high_350","4j_high_450"]
processes = ["lost","1l","tt_1l","Zinv","total","data"]
lumi_2015 = 2.3
lumi_2016 = 3.99

# 2016
y_2j_250 = [ (12.49 , 1.78) , (4.01 , 1.02) , (0.12 , 0.12) , (0.90 , 0.13) , (17.52 , 2.06) , (31,math.sqrt(31)) ]
y_2j_350 = [ (2.29,0.70), (2.62,0.88), (0.00,0.00), (0.74,0.12), (5.65,1.13), (6,math.sqrt(6)) ]
y_3j_250 = [ (6.52,1.35), (5.72,1.75), (0.0,0.0), (0.95,0.13), (13.19,2.35), (11,math.sqrt(11)) ]
y_3j_350 = [ (2.55,0.83), (2.42,2.11), (0.0,0.0), (0.90,0.12), (5.86,2.24), (6,math.sqrt(6)) ]
y_4j_low_250 = [ (37.82,4.32), (1.57,1.57), (1.44,1.44), (1.29,0.13), (40.6,4.81), (27,math.sqrt(27)) ]
y_4j_low_325 = [ (14.29,2.34), (0.53,0.53), (0.86,0.86), (0.92,0.12), (16.6,2.55), (11,math.sqrt(3)) ]
y_4j_high_250  = [ (6.55,1.46), (3.577,1.73), (0.68,0.68), (1.51,0.15), (12.20,2.37), (12,math.sqrt(3)) ]
y_4j_high_350  = [ (2.53,0.91), (0.083,0.47), (0.37,0.37), (0.90,0.12), (3.88,1.10), (3,math.sqrt(3)) ]
y_4j_high_450  = [ (1.06,0.58), (0.43,0.45), (0.12,0.12), (0.50,0.12), (2.11,0.75), (3,math.sqrt(3)) ]

y_2016 = [y_2j_250,y_2j_350,y_3j_250,y_3j_350,y_4j_low_250,y_4j_low_325,y_4j_high_250,y_4j_high_350,y_4j_high_450]

# 2015 yield
y_2j_250_2015 = [ (4.33,1.42), (2.61,0.96), (0.09,0.09), (0.60,0.12), (7.64,1.73), (8,math.sqrt(8)) ]
y_2j_350_2015 = [ (0.69,0.24), (0.98,0.44), (0.00,0.00), (0.36,0.13), (2.03,0.52), (5,math.sqrt(5)) ]
y_3j_250_2015 = [ (2.75,0.71), (0.92,0.50), (0.12,0.12), (0.64,0.13), (4.43,0.89), (8,math.sqrt(8)) ]
y_3j_350_2015 = [ (0.81,0.22), (0.88,0.49), (0.05,0.05), (0.41,0.09), (2.14,0.55), (2,math.sqrt(2)) ]
y_4j_low_250_2015 = [ (22.96,3.33), (0.61,0.61), (0.88,0.88), (0.74,0.17), (25.19,3.50), (14,math.sqrt(14)) ]
y_4j_low_325_2015 = [ (8.80,1.42), (0.43,0.43), (0.40,0.40), (0.30,0.11), (9.93,1.54), (8,math.sqrt(8)) ]
y_4j_high_250_2015 = [ (3.20,0.88), (0.92,0.46), (0.78,0.78), (0.76,0.19), (5.66,1.28), (13,math.sqrt(13)) ]
y_4j_high_350_2015 = [ (0.99,0.28), (0.54,0.32), (0.18,0.18), (0.46,0.14), (2.17,0.48), (4,2) ]
y_4j_high_450_2015 = [ (0.70,0.23), (0.55,0.36), (0.07,0.07), (0.52,0.17), (1.84,0.46), (0,0) ]

y_2015 = [y_2j_250_2015,y_2j_350_2015,y_3j_250_2015,y_3j_350_2015,y_4j_low_250_2015,y_4j_low_325_2015,y_4j_high_250_2015,y_4j_high_350_2015,y_4j_high_450_2015]

print ("bin ", end="\t\t\t")
for j in range(len(processes)): 
    print (processes[j],end="\t\t")
print ("",end="\n")
for i in range(len(regions)):
    #if j == 0 :
    #    for i in range(len(regions)):
    #        print (regions[i], end=" ")
    for j in range(len(processes)): 
        if j == 0 :
            print (regions[i], end="\t\t")
        val = 0
        if y_2015[i][j][0] != 0:
            val = (y_2016[i][j][0]/lumi_2016)/(y_2015[i][j][0]/lumi_2015)
            err = 0
            #print (y_2015[i][j][1], y_2016[i][j][1])
            if y_2016[i][j][1]!=0 and y_2015[i][j][1]!=0: 
                err = math.sqrt(math.pow((y_2016[i][j][1]/y_2016[i][j][0]),2)+math.pow((y_2015[i][j][1]/y_2015[i][j][0]),2))
            err = val*err
            #print err
            #print( '%3.2f'%val, end = "\t")
            print( '%3.2f'%val, "+/-", '%3.2f'%err, end = "\t")
        #else : print ("error ",y_2015[i][j][0], end = " ")
        else : print (" - ", end = "\t\t")
    print("")
